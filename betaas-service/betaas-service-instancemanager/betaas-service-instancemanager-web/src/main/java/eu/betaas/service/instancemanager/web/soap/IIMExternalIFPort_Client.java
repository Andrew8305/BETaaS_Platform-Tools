/*
Copyright 2014-2015 Intecs Spa

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing, software
 distributed under the License is distributed on an "AS IS" BASIS,
 WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 See the License for the specific language governing permissions and
 limitations under the License.
*/


package eu.betaas.service.instancemanager.web.soap;

/**
 * Please modify this class to meet your needs
 * This class is not complete
 */

import java.io.File;
import java.net.MalformedURLException;
import java.net.URL;
import javax.xml.namespace.QName;
import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.ws.RequestWrapper;
import javax.xml.ws.ResponseWrapper;

/**
 * This class was generated by Apache CXF 2.7.6
 * 2014-04-04T18:30:30.476+02:00
 * Generated source version: 2.7.6
 * 
 */
public final class IIMExternalIFPort_Client {

    private static final QName SERVICE_NAME = new QName("http://api.instancemanager.service.betaas.eu/", "InstanceManagerExternalIF");

    private IIMExternalIFPort_Client() {
    }

    public static void main(String args[]) throws java.lang.Exception {
        URL wsdlURL = InstanceManagerExternalIF.WSDL_LOCATION;
        if (args.length > 0 && args[0] != null && !"".equals(args[0])) { 
            File wsdlFile = new File(args[0]);
            try {
                if (wsdlFile.exists()) {
                    wsdlURL = wsdlFile.toURI().toURL();
                } else {
                    wsdlURL = new URL(args[0]);
                }
            } catch (MalformedURLException e) {
                e.printStackTrace();
            }
        }
      
        InstanceManagerExternalIF ss = new InstanceManagerExternalIF(wsdlURL, SERVICE_NAME);
        InstanceManagerExternalIFPortType port = ss.getInstanceManagerExternalIFPort();  
        
        {
        System.out.println("Invoking getAdminAddress...");
        java.lang.String _getAdminAddress__return = port.getAdminAddress();
        System.out.println("getAdminAddress.result=" + _getAdminAddress__return);


        }
        {
        System.out.println("Invoking getGWStarID...");
        java.lang.String _getGWStarID__return = port.getGWStarID();
        System.out.println("getGWStarID.result=" + _getGWStarID__return);


        }
        {
        System.out.println("Invoking requestJoin...");
        java.lang.String _requestJoin_arg0 = "";
        boolean _requestJoin__return = port.requestJoin(_requestJoin_arg0);
        System.out.println("requestJoin.result=" + _requestJoin__return);


        }
        {
        System.out.println("Invoking isGWStar...");
        boolean _isGWStar__return = port.isGWStar();
        System.out.println("isGWStar.result=" + _isGWStar__return);


        }
        {
        System.out.println("Invoking getDescription...");
        java.lang.String _getDescription__return = port.getDescription();
        System.out.println("getDescription.result=" + _getDescription__return);


        }
        {
        System.out.println("Invoking getGWID...");
        java.lang.String _getGWID__return = port.getGWID();
        System.out.println("getGWID.result=" + _getGWID__return);


        }
        {
        System.out.println("Invoking requestDisjoin...");
        boolean _requestDisjoin__return = port.requestDisjoin();
        System.out.println("requestDisjoin.result=" + _requestDisjoin__return);


        }
        {
        System.out.println("Invoking getInstanceInfo...");
        java.lang.String _getInstanceInfo__return = port.getInstanceInfo();
        System.out.println("getInstanceInfo.result=" + _getInstanceInfo__return);


        }
        {
        System.out.println("Invoking joinInstance...");
        java.lang.String _joinInstance_arg0 = "";
        java.lang.String _joinInstance_arg1 = "";
        boolean _joinInstance__return = port.joinInstance(_joinInstance_arg0, _joinInstance_arg1);
        System.out.println("joinInstance.result=" + _joinInstance__return);


        }
        {
        System.out.println("Invoking disjoinInstance...");
        java.lang.String _disjoinInstance_arg0 = "";
        java.lang.String _disjoinInstance_arg1 = "";
        boolean _disjoinInstance__return = port.disjoinInstance(_disjoinInstance_arg0, _disjoinInstance_arg1);
        System.out.println("disjoinInstance.result=" + _disjoinInstance__return);


        }
        {
        System.out.println("Invoking getInstanceID...");
        java.lang.String _getInstanceID__return = port.getInstanceID();
        System.out.println("getInstanceID.result=" + _getInstanceID__return);


        }
        {
        System.out.println("Invoking getJoinedGWs...");
        eu.betaas.service.instancemanager.web.soap.ArrayOfString _getJoinedGWs__return = port.getJoinedGWs();
        System.out.println("getJoinedGWs.result=" + _getJoinedGWs__return);


        }
        {
        System.out.println("Invoking isBackupStar...");
        boolean _isBackupStar__return = port.isBackupStar();
        System.out.println("isBackupStar.result=" + _isBackupStar__return);


        }

        System.exit(0);
    }

}
