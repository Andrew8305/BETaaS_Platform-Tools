################################################################################
#
#    Licensed to the Apache Software Foundation (ASF) under one or more
#    contributor license agreements.  See the NOTICE file distributed with
#    this work for additional INFOrmation regarding copyright ownership.
#    The ASF licenses this file to You under the Apache License, Version 2.0
#    (the "License"); you may not use this file except in compliance with
#    the License.  You may obtain a copy of the License at
#
#       http://www.apache.org/licenses/LICENSE-2.0
#
#    Unless required by applicable law or agreed to in writing, software
#    distributed under the License is distributed on an "AS IS" BASIS,
#    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
#    See the License for the specific language governing permissions and
#    limitations under the License.
#
################################################################################

# Root logger
log4j.rootLogger=INFO, stdout , out
log4j.throwableRenderer=org.apache.log4j.OsgiThrowableRenderer

# To avoid flooding the log when using INFO level on an ssh connection and doing log:tail
log4j.logger.org.apache.sshd.server.channel.ChannelSession = INFO

# CONSOLE appender not used by default
log4j.appender.stdout.Target=System.out
log4j.appender.stdout=org.apache.log4j.ConsoleAppender
log4j.appender.stdout.layout=org.apache.log4j.PatternLayout
log4j.appender.stdout.layout.ConversionPattern=%d{ISO8601} | %-5.5p | %-16.16t | %-32.32c{1} | %-32.32C %4L | %X{bundle.id} - %X{bundle.name} - %X{bundle.version} | %m%n

# File appender
log4j.appender.out=org.apache.log4j.RollingFileAppender
log4j.appender.out.layout=org.apache.log4j.PatternLayout
log4j.appender.out.layout.ConversionPattern=%d{ISO8601} | %-5.5p | %-16.16t | %-32.32c{1} | %-32.32C %4L | %X{bundle.id} - %X{bundle.name} - %X{bundle.version} | %m%n
log4j.appender.out.file=${karaf.data}/log/karaf.log
log4j.appender.out.append=true
log4j.appender.out.maxFileSize=5MB
log4j.appender.out.maxBackupIndex=10

# Sift appender
log4j.appender.sift=org.apache.log4j.sift.MDCSiftingAppender
log4j.appender.sift.key=bundle.name
log4j.appender.sift.default=karaf
log4j.appender.sift.appender=org.apache.log4j.FileAppender
log4j.appender.sift.appender.layout=org.apache.log4j.PatternLayout
log4j.appender.sift.appender.layout.ConversionPattern=%d{ISO8601} | %-5.5p | %-16.16t | %-32.32c{1} | %-32.32C %4L | %m%n
log4j.appender.sift.appender.file=${karaf.data}/log/$\\{bundle.name\\}.log
log4j.appender.sift.appender.append=true

log4j.logger.betaas=INFO, stdout, betaasfilelog
log4j.appender.betaasfilelog=org.apache.log4j.RollingFileAppender
log4j.appender.betaasfilelog.layout=org.apache.log4j.PatternLayout
log4j.appender.betaasfilelog.threshold=INFO
log4j.appender.betaasfilelog.layout.ConversionPattern=%d{ISO8601} | %X{bundle.id} - %X{bundle.name} - %X{bundle.version} | %m%n
log4j.appender.betaasfilelog.file=${karaf.data}/log/karaf_betaas.log
log4j.appender.betaasfilelog.append=true
log4j.appender.betaasfilelog.maxFileSize=1MB
log4j.appender.betaasfilelog.maxBackupIndex=10

log4j.logger.betaas.taas=INFO, stdout, betaastaasfilelog
log4j.appender.betaastaasfilelog=org.apache.log4j.RollingFileAppender
log4j.appender.betaastaasfilelog.layout=org.apache.log4j.PatternLayout
log4j.appender.betaastaasfilelog.threshold=INFO
log4j.appender.betaastaasfilelog.layout.ConversionPattern=%d{ISO8601} | %X{bundle.id} - %X{bundle.name} - %X{bundle.version} | %m%n
log4j.appender.betaastaasfilelog.file=${karaf.data}/log/karaf_betaas_taas.log
log4j.appender.betaastaasfilelog.append=true
log4j.appender.betaastaasfilelog.maxFileSize=1MB
log4j.appender.betaastaasfilelog.maxBackupIndex=10

#log4j.logger.betaas.service=INFO, stdout
log4j.logger.betaas.service=INFO, stdout, betaasservicefilelog
log4j.appender.betaasservicefilelog=org.apache.log4j.RollingFileAppender
log4j.appender.betaasservicefilelog.layout=org.apache.log4j.PatternLayout
log4j.appender.betaasservicefilelog.threshold=INFO
log4j.appender.betaasservicefilelog.layout.ConversionPattern=%d{ISO8601} | %X{bundle.id} - %X{bundle.name} - %X{bundle.version} | %m%n
log4j.appender.betaasservicefilelog.file=${karaf.data}/log/karaf_betaas_service.log
log4j.appender.betaasservicefilelog.append=true
log4j.appender.betaasservicefilelog.maxFileSize=1MB
log4j.appender.betaasservicefilelog.maxBackupIndex=10

log4j.logger.betaas.adaptation=INFO, stdout, betaasadaptationfilelog
log4j.appender.betaasadaptationfilelog=org.apache.log4j.RollingFileAppender
log4j.appender.betaasadaptationfilelog.layout=org.apache.log4j.PatternLayout
log4j.appender.betaasadaptationfilelog.threshold=INFO
log4j.appender.betaasadaptationfilelog.layout.ConversionPattern=%d{ISO8601} |  %X{bundle.id} - %X{bundle.name} - %X{bundle.version} | %m%n
log4j.appender.betaasadaptationfilelog.file=${karaf.data}/log/karaf_betaas_adaptation.log
log4j.appender.betaasadaptationfilelog.append=true
log4j.appender.betaasadaptationfilelog.maxFileSize=1MB
log4j.appender.betaasadaptationfilelog.maxBackupIndex=10

log4j.logger.betaas.thingsadaptor=INFO, stdout, betaastafilelog
log4j.appender.betaastafilelog=org.apache.log4j.RollingFileAppender
log4j.appender.betaastafilelog.layout=org.apache.log4j.PatternLayout
log4j.appender.betaastafilelog.threshold=INFO
log4j.appender.betaastafilelog.layout.ConversionPattern=%d{ISO8601} |  %X{bundle.id} - %X{bundle.name} - %X{bundle.version} | %m%n
log4j.appender.betaastafilelog.file=${karaf.data}/log/karaf_betaas_ta.log
log4j.appender.betaastafilelog.append=true
log4j.appender.betaastafilelog.maxFileSize=1MB
log4j.appender.betaastafilelog.maxBackupIndex=10

